/*
Source file for OpenMC generated by MCNP_to_OpenMC.py script by Max Conroy.    

Distributions based on MCNP SDEF file by Daniel Minsky.    

Details:
	Generated on 14-12-2023.    

For more information, please contact m.j.conroy@pgr.bham.ac.uk.
*/
#include <memory>
#include <cmath>
#include <vector>
#include <iostream>
#include "openmc/random_lcg.h"
#include "openmc/source.h"
#include "openmc/particle.h"
#include "openmc/distribution.h"

// Create new source class which inherits from openmc::Source    
class Li_source : public openmc::Source {

	// Define a function called "sample" to generate neutrons
	openmc::SourceSite sample(uint64_t* seed) const {

		openmc::SourceSite particle;
		// Define particle type
		particle.particle = openmc::ParticleType::neutron;    
		// Define particle weight
		particle.wgt = 1.121487e+11;

		// Initialise required variables    
		double energy {0.0};
		double mu {0.0};    
		double theta {0.0};
		double phi {0.0};    
		//double pos_r {0.0};
		//double pos_ang {0.0};

		// Define energies and probabilities for distribution    
		double energies[103] = {     0.,  1000.,  2000.,  3000.,  4000.,  7000., 12000., 16000., 22000.,
  32000., 42000., 83000., 96000., 98000.,105000.,107000.,110000.,112000.,
 115000.,117000.,120000.,122000.,125000.,127000.,130000.,132000.,135000.,
 137000.,138000.,139000.,140000.,142000.,143000.,145000.,146000.,147000.,
 148000.,150000.,151000.,152000.,153000.,155000.,156000.,158000.,159000.,
 160000.,161000.,163000.,164000.,165000.,166000.,168000.,169000.,170000.,
 171000.,173000.,174000.,175000.,176000.,178000.,179000.,180000.,181000.,
 182000.,183000.,185000.,186000.,187000.,188000.,189000.,190000.,192000.,
 193000.,194000.,195000.,196000.,197000.,198000.,199000.,200000.,201000.,
 202000.,203000.,204000.,205000.,206000.,207000.,208000.,210000.,211000.,
 212000.,213000.,215000.,216000.,218000.,219000.,222000.,224000.,226000.,
 227000.,228000.,230000.,231000.};    
		double E_probabilities[103] = {0.00000000e+00,8.81345138e-03,1.24976977e-02,1.53223404e-02,
 1.76962092e-02,2.33515089e-02,3.03613634e-02,3.45392971e-02,
 3.58773573e-02,3.62191689e-02,3.47966600e-02,2.54423146e-02,
 2.20045011e-02,2.19379695e-02,1.99478677e-02,1.98735900e-02,
 1.88993712e-02,1.88223849e-02,1.78603602e-02,1.77814650e-02,
 1.68251744e-02,1.67503771e-02,1.58017442e-02,1.57272306e-02,
 1.47914257e-02,1.47059341e-02,1.37722666e-02,1.36853488e-02,
 1.32466290e-02,1.32033618e-02,1.27694511e-02,1.26841327e-02,
 1.22561661e-02,1.21726755e-02,1.17511064e-02,1.17103155e-02,
 1.12945505e-02,1.12147745e-02,1.08057422e-02,1.07667202e-02,
 1.03637795e-02,1.02874491e-02,9.89161331e-03,9.81710343e-03,
 9.42863789e-03,9.39235399e-03,9.01063595e-03,8.94023500e-03,
 8.56648792e-03,8.53247775e-03,8.16596092e-03,8.10050911e-03,
 7.74250865e-03,7.71113335e-03,7.36077218e-03,7.30081861e-03,
 6.95939391e-03,6.93084143e-03,6.59738032e-03,6.54313135e-03,
 6.21890889e-03,6.19320503e-03,5.87718570e-03,5.85279743e-03,
 5.54508809e-03,5.49903856e-03,5.20085532e-03,5.17915352e-03,
 4.88944610e-03,4.86896039e-03,4.58779882e-03,4.54927066e-03,
 4.27776784e-03,4.25965168e-03,3.99678315e-03,3.97972463e-03,
 3.72553461e-03,3.70947476e-03,3.46399494e-03,3.44888364e-03,
 3.21215603e-03,3.19794686e-03,2.97001200e-03,2.95666810e-03,
 2.73756726e-03,2.72505768e-03,2.51483324e-03,2.50313402e-03,
 2.10866871e-03,2.09857252e-03,1.91442673e-03,1.90509558e-03,
 1.56320729e-03,1.55538336e-03,1.24839521e-03,1.24199227e-03,
 8.46750133e-04,6.25589666e-04,4.38333978e-04,3.57383059e-04,
 2.84843917e-04,4.72297719e-05,0.00000000e+00};
		// Define energy distribution
		openmc::Tabular E_dist(energies, E_probabilities, 103, openmc::Interpolation::lin_lin);
		// Sample energy from distribution
		energy = E_dist.sample(seed);
		particle.E = energy;

		// Define energy values for bin edges to choose angular distribution    
		double edges[58] = {  5000.,  9000., 13000., 17000., 21000., 25000., 29000., 33000., 37000.,
  41000., 45000., 49000., 53000., 57000., 61000., 65000., 69000., 73000.,
  77000., 81000., 85000., 89000., 93000., 97000.,101000.,105000.,109000.,
 113000.,117000.,121000.,125000.,129000.,133000.,137000.,141000.,145000.,
 149000.,153000.,157000.,161000.,165000.,169000.,173000.,177000.,181000.,
 185000.,189000.,193000.,197000.,201000.,205000.,209000.,213000.,217000.,
 221000.,225000.,229000.,231000.};

		// Create vector to hold angular distributions        
		std::vector<openmc::Tabular> ang_dists;

		// Angular distribution for energies 0.0 < E <= 5000.0            
		double cos_angles_1[6] = {-1.       ,-0.052336 ,-0.0348995, 0.515038 , 0.766044 , 1.       };            
		double ang_probabilities_1[6] = {0.13454542,0.15214883,0.1478466 ,0.17108408,0.1870698 ,0.20730527};            
		openmc::Tabular ang_dist_1(cos_angles_1, ang_probabilities_1, 6, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_1);

		// Angular distribution for energies 5000.0 < E <= 9000.0            
		double cos_angles_2[9] = {-1.      ,-0.358368, 0.104528, 0.121869, 0.374607, 0.601815, 0.809017,
  0.906308, 1.      };            
		double ang_probabilities_2[9] = {0.07824939,0.08623586,0.09513689,0.09266001,0.10218601,0.11458028,
 0.13148015,0.14265184,0.15681957};            
		openmc::Tabular ang_dist_2(cos_angles_2, ang_probabilities_2, 9, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_2);

		// Angular distribution for energies 9000.0 < E <= 13000.0            
		double cos_angles_3[11] = {-1.      ,-0.601815,-0.139173, 0.190809, 0.207912, 0.438371, 0.656059,
  0.75471 , 0.838671, 0.927184, 1.      };            
		double ang_probabilities_3[11] = {0.06040601,0.06180932,0.06806523,0.07454513,0.07268065,0.08155196,
 0.09461814,0.10320713,0.11278949,0.12669271,0.14363425};            
		openmc::Tabular ang_dist_3(cos_angles_3, ang_probabilities_3, 11, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_3);

		// Angular distribution for energies 13000.0 < E <= 17000.0            
		double cos_angles_4[14] = {-1.      ,-0.642788,-0.469472,-0.052336, 0.258819, 0.275637, 0.5     ,
  0.601815, 0.694658, 0.788011, 0.866025, 0.939693, 0.970296, 1.      };            
		double ang_probabilities_4[14] = {0.04428786,0.04432437,0.04502328,0.04972589,0.05496835,0.05367896,
 0.06147388,0.06655697,0.07256619,0.08067927,0.0901531 ,0.10345174,
 0.11137646,0.12173368};            
		openmc::Tabular ang_dist_4(cos_angles_4, ang_probabilities_4, 14, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_4);

		// Angular distribution for energies 17000.0 < E <= 21000.0            
		double cos_angles_5[16] = {-0.838671 ,-0.829038 ,-0.48481  ,-0.34202  , 0.0348995, 0.309017 ,
  0.325568 , 0.529919 , 0.62932  , 0.71934  , 0.809017 , 0.882948 ,
  0.920505 , 0.951057 , 0.978148 , 1.       };            
		double ang_probabilities_5[16] = {0.        ,0.03811131,0.0382023 ,0.03878062,0.04296471,0.04754006,
 0.04641806,0.05339141,0.05834975,0.06434046,0.07267269,0.08282878,
 0.09015335,0.0981284 ,0.10800886,0.12010924};            
		openmc::Tabular ang_dist_5(cos_angles_5, ang_probabilities_5, 16, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_5);

		// Angular distribution for energies 21000.0 < E <= 25000.0            
		double cos_angles_6[16] = {-0.694658,-0.681998,-0.241922, 0.104528, 0.358368, 0.374607, 0.573576,
  0.669131, 0.75471 , 0.838671, 0.906308, 0.93358 , 0.961262, 0.984808,
  0.992546, 1.      };            
		double ang_probabilities_6[16] = {0.        ,0.03308581,0.03370494,0.03743943,0.04156123,0.04063812,
 0.0473955 ,0.05228235,0.05827865,0.06680575,0.07755801,0.08392213,
 0.09287486,0.10480725,0.11075728,0.11888869};            
		openmc::Tabular ang_dist_6(cos_angles_6, ang_probabilities_6, 16, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_6);

		// Angular distribution for energies 25000.0 < E <= 29000.0            
		double cos_angles_7[18] = {-0.573576 ,-0.559193 ,-0.258819 ,-0.0871557, 0.190809 , 0.390731 ,
  0.406737 , 0.544639 , 0.694658 , 0.766044 , 0.829038 , 0.891007 ,
  0.939693 , 0.961262 , 0.978148 , 0.992546 , 0.997564 , 1.       };            
		double ang_probabilities_7[18] = {0.        ,0.02788578,0.02805537,0.02895912,0.03200851,0.03512981,
 0.03426462,0.03820829,0.04481624,0.04948451,0.05510808,0.06317524,
 0.07332379,0.08029742,0.08829296,0.09983865,0.10730489,0.1138467 };            
		openmc::Tabular ang_dist_7(cos_angles_7, ang_probabilities_7, 18, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_7);

		// Angular distribution for energies 29000.0 < E <= 33000.0            
		double cos_angles_8[22] = {-0.469472 ,-0.45399  ,-0.173648 ,-0.0174524, 0.241922 , 0.438371 ,
  0.45399  , 0.573576 , 0.642788 , 0.71934  , 0.788011 , 0.848048 ,
  0.898794 , 0.920505 , 0.945519 , 0.965926 , 0.981627 , 0.987688 ,
  0.994522 , 0.997564 , 0.999391 , 1.       };            
		double ang_probabilities_8[22] = {0.        ,0.02072683,0.0208916 ,0.02157856,0.02389551,0.02636812,
 0.02581364,0.02861149,0.03076567,0.03384498,0.03756855,0.04208179,
 0.04758057,0.0507796 ,0.0556037 ,0.06117827,0.06765056,0.07127566,
 0.07725246,0.08158999,0.08603696,0.08890547};            
		openmc::Tabular ang_dist_8(cos_angles_8, ang_probabilities_8, 22, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_8);

		// Angular distribution for energies 33000.0 < E <= 37000.0            
		double cos_angles_9[18] = {-0.390731 ,-0.374607 ,-0.104528 , 0.0348995, 0.275637 , 0.469472 ,
  0.48481  , 0.587785 , 0.71934  , 0.777146 , 0.838671 , 0.891007 ,
  0.939693 , 0.961262 , 0.978148 , 0.990268 , 0.996195 , 1.       };            
		double ang_probabilities_9[18] = {0.        ,0.02846747,0.02873987,0.02962904,0.03278614,0.03638959,
 0.0355868 ,0.0390583 ,0.04561696,0.04977129,0.05571765,0.06293893,
 0.07338178,0.08052484,0.08861632,0.09753928,0.10429338,0.11094239};            
		openmc::Tabular ang_dist_9(cos_angles_9, ang_probabilities_9, 18, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_9);

		// Angular distribution for energies 37000.0 < E <= 41000.0            
		double cos_angles_10[17] = {-0.309017,-0.292372,-0.052336, 0.052336, 0.309017, 0.5     , 0.515038,
  0.669131, 0.743145, 0.809017, 0.866025, 0.920505, 0.945519, 0.965926,
  0.984808, 0.992546, 1.      };            
		double ang_probabilities_10[17] = {0.        ,0.03182157,0.03214115,0.0327936 ,0.03664736,0.04088916,
 0.03996367,0.04678773,0.05167203,0.05757515,0.06469787,0.07486295,
 0.08169577,0.08929272,0.09958455,0.10568135,0.11389336};            
		openmc::Tabular ang_dist_10(cos_angles_10, ang_probabilities_10, 17, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_10);

		// Angular distribution for energies 41000.0 < E <= 45000.0            
		double cos_angles_11[16] = {-2.41922e-01,-2.24951e-01,-1.03634e-13, 1.04528e-01, 3.58368e-01,
  5.29919e-01, 5.44639e-01, 6.81998e-01, 7.43145e-01, 8.09017e-01,
  8.66025e-01, 9.20505e-01, 9.45519e-01, 9.65926e-01, 9.84808e-01,
  1.00000e+00};            
		double ang_probabilities_11[16] = {0.        ,0.03658735,0.0369965 ,0.03779735,0.04253751,0.04729107,
 0.04621254,0.05349742,0.05811889,0.0646963 ,0.07257462,0.0836487 ,
 0.09093046,0.09880752,0.1089454 ,0.12135838};            
		openmc::Tabular ang_dist_11(cos_angles_11, ang_probabilities_11, 16, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_11);

		// Angular distribution for energies 45000.0 < E <= 49000.0            
		double cos_angles_12[15] = {-0.173648,-0.156434, 0.052336, 0.156434, 0.390731, 0.559193, 0.573576,
  0.707107, 0.766044, 0.819152, 0.87462 , 0.920505, 0.965926, 0.984808,
  1.      };            
		double ang_probabilities_12[15] = {0.        ,0.04110711,0.04162114,0.04262024,0.04789144,0.05345922,
 0.05224847,0.0607106 ,0.06605022,0.07224666,0.0809358 ,0.09107509,
 0.10650653,0.11626609,0.1272614 };            
		openmc::Tabular ang_dist_12(cos_angles_12, ang_probabilities_12, 15, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_12);

		// Angular distribution for energies 49000.0 < E <= 53000.0            
		double cos_angles_13[15] = {-0.121869,-0.104528, 0.104528, 0.190809, 0.422618, 0.587785, 0.601815,
  0.71934 , 0.777146, 0.829038, 0.882948, 0.927184, 0.965926, 0.984808,
  1.      };            
		double ang_probabilities_13[15] = {0.        ,0.04194013,0.04256233,0.04344965,0.04902695,0.0549278 ,
 0.05370695,0.06157747,0.066982  ,0.07321113,0.08184263,0.09170339,
 0.10423483,0.11283976,0.12199497};            
		openmc::Tabular ang_dist_13(cos_angles_13, ang_probabilities_13, 15, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_13);

		// Angular distribution for energies 53000.0 < E <= 57000.0            
		double cos_angles_14[13] = {-0.0697565,-0.052336 , 0.139173 , 0.241922 , 0.45399  , 0.615661 ,
  0.62932  , 0.743145 , 0.838671 , 0.882948 , 0.927184 , 0.965926 ,
  1.       };            
		double ang_probabilities_14[13] = {0.        ,0.05208791,0.05287563,0.05430084,0.06113022,0.06871433,
 0.06722989,0.07725105,0.09020881,0.09875151,0.11014259,0.12422491,
 0.14308232};            
		openmc::Tabular ang_dist_14(cos_angles_14, ang_probabilities_14, 13, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_14);

		// Angular distribution for energies 57000.0 < E <= 61000.0            
		double cos_angles_15[13] = {-1.74524e-02,-1.03634e-13, 1.90809e-01, 2.75637e-01, 4.84810e-01,
  6.42788e-01, 6.56059e-01, 7.54710e-01, 8.48048e-01, 8.91007e-01,
  9.27184e-01, 9.65926e-01, 1.00000e+00};            
		double ang_probabilities_15[13] = {0.        ,0.05298118,0.05393204,0.05525174,0.06245207,0.07040685,
 0.06893974,0.07804593,0.09094302,0.09930581,0.10835272,0.12136354,
 0.13802536};            
		openmc::Tabular ang_dist_15(cos_angles_15, ang_probabilities_15, 13, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_15);

		// Angular distribution for energies 61000.0 < E <= 65000.0            
		double cos_angles_16[12] = {0.0174524,0.0348995,0.224951 ,0.309017 ,0.515038 ,0.669131 ,0.681998 ,
 0.777146 ,0.857167 ,0.93358  ,0.970296 ,1.       };            
		double ang_probabilities_16[12] = {0.        ,0.05942577,0.06058797,0.06209835,0.07047366,0.0796548 ,
 0.07806243,0.08845048,0.10114527,0.11967247,0.13287786,0.14755095};            
		openmc::Tabular ang_dist_16(cos_angles_16, ang_probabilities_16, 12, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_16);

		// Angular distribution for energies 65000.0 < E <= 69000.0            
		double cos_angles_17[12] = {0.0697565,0.0871557,0.258819 ,0.34202  ,0.544639 ,0.694658 ,0.707107 ,
 0.788011 ,0.866025 ,0.939693 ,0.970296 ,1.       };            
		double ang_probabilities_17[12] = {0.        ,0.06025966,0.06145763,0.06304034,0.07182923,0.08136559,
 0.07980947,0.08900192,0.10149802,0.11921705,0.12964849,0.1428726 };            
		openmc::Tabular ang_dist_17(cos_angles_17, ang_probabilities_17, 12, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_17);

		// Angular distribution for energies 69000.0 < E <= 73000.0            
		double cos_angles_18[12] = {0.104528,0.121869,0.292372,0.374607,0.573576,0.71934 ,0.731354,0.809017,
 0.87462 ,0.939693,0.970296,1.      };            
		double ang_probabilities_18[12] = {0.        ,0.0609874 ,0.06231334,0.06399048,0.07320044,0.08306942,
 0.08154889,0.09091982,0.1017446 ,0.11692962,0.12663074,0.13866526};            
		openmc::Tabular ang_dist_18(cos_angles_18, ang_probabilities_18, 12, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_18);

		// Angular distribution for energies 73000.0 < E <= 77000.0            
		double cos_angles_19[11] = {0.139173,0.156434,0.325568,0.406737,0.601815,0.743145,0.75471 ,0.819152,
 0.882948,0.945519,1.      };            
		double ang_probabilities_19[11] = {0.        ,0.0703596 ,0.07203044,0.07407502,0.08506422,0.09667004,
 0.0949689 ,0.1041506 ,0.11621019,0.13267194,0.15379905};            
		openmc::Tabular ang_dist_19(cos_angles_19, ang_probabilities_19, 11, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_19);

		// Angular distribution for energies 77000.0 < E <= 81000.0            
		double cos_angles_20[11] = {0.173648,0.190809,0.358368,0.438371,0.615661,0.766044,0.777146,0.838671,
 0.891007,0.945519,1.      };            
		double ang_probabilities_20[11] = {0.        ,0.07093179,0.07276876,0.07496172,0.08544986,0.09829124,
 0.0966139 ,0.10583703,0.11594018,0.12981136,0.14939415};            
		openmc::Tabular ang_dist_20(cos_angles_20, ang_probabilities_20, 11, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_20);

		// Angular distribution for energies 81000.0 < E <= 85000.0            
		double cos_angles_21[11] = {0.207912,0.224951,0.390731,0.469472,0.642788,0.788011,0.798636,0.857167,
 0.906308,0.956305,1.      };            
		double ang_probabilities_21[11] = {0.        ,0.07106445,0.07306855,0.07541645,0.08625331,0.09929381,
 0.0976294 ,0.1067735 ,0.11656004,0.12944775,0.14449274};            
		openmc::Tabular ang_dist_21(cos_angles_21, ang_probabilities_21, 11, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_21);

		// Angular distribution for energies 85000.0 < E <= 89000.0            
		double cos_angles_22[10] = {0.241922,0.258819,0.406737,0.48481 ,0.656059,0.798636,0.809017,0.906308,
 0.956305,1.      };            
		double ang_probabilities_22[10] = {0.        ,0.08072421,0.0828693 ,0.0853061 ,0.09760656,0.11268107,
 0.11016408,0.12907165,0.14285827,0.15871877};            
		openmc::Tabular ang_dist_22(cos_angles_22, ang_probabilities_22, 10, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_22);

		// Angular distribution for energies 89000.0 < E <= 93000.0            
		double cos_angles_23[9] = {0.275637,0.292372,0.48481 ,0.615661,0.71934 ,0.819152,0.829038,0.920505,
 1.      };            
		double ang_probabilities_23[9] = {0.        ,0.09311091,0.09730243,0.10676494,0.11747737,0.13094825,
 0.12800887,0.14909507,0.17729217};            
		openmc::Tabular ang_dist_23(cos_angles_23, ang_probabilities_23, 9, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_23);

		// Angular distribution for energies 93000.0 < E <= 97000.0            
		double cos_angles_24[9] = {0.309017,0.325568,0.5     ,0.62932 ,0.743145,0.848048,0.857167,0.927184,
 1.      };            
		double ang_probabilities_24[9] = {0.        ,0.09334888,0.09725717,0.10644295,0.11868732,0.13333949,
 0.13097636,0.14759882,0.17234902};            
		openmc::Tabular ang_dist_24(cos_angles_24, ang_probabilities_24, 9, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_24);

		// Angular distribution for energies 97000.0 < E <= 101000.0            
		double cos_angles_25[9] = {0.34202 ,0.358368,0.529919,0.642788,0.75471 ,0.866025,0.87462 ,0.939693,
 1.      };            
		double ang_probabilities_25[9] = {0.        ,0.09378865,0.09803929,0.10632959,0.1186784 ,0.13477541,
 0.1322367 ,0.1480667 ,0.16808525};            
		openmc::Tabular ang_dist_25(cos_angles_25, ang_probabilities_25, 9, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_25);

		// Angular distribution for energies 101000.0 < E <= 105000.0            
		double cos_angles_26[9] = {0.374607,0.390731,0.544639,0.656059,0.777146,0.882948,0.891007,0.945519,
 1.      };            
		double ang_probabilities_26[9] = {0.        ,0.09433744,0.09829977,0.10631806,0.12019786,0.13626527,
 0.13347944,0.14683747,0.16426469};            
		openmc::Tabular ang_dist_26(cos_angles_26, ang_probabilities_26, 9, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_26);

		// Angular distribution for energies 105000.0 < E <= 109000.0            
		double cos_angles_27[9] = {0.390731,0.406737,0.559193,0.656059,0.788011,0.898794,0.906308,0.956305,
 1.      };            
		double ang_probabilities_27[9] = {0.        ,0.09472661,0.09874212,0.10521012,0.12046366,0.13788403,
 0.13476995,0.14726008,0.16094342};            
		openmc::Tabular ang_dist_27(cos_angles_27, ang_probabilities_27, 9, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_27);

		// Angular distribution for energies 109000.0 < E <= 113000.0            
		double cos_angles_28[8] = {0.422618,0.438371,0.587785,0.669131,0.809017,0.920505,0.927184,1.      };            
		double ang_probabilities_28[8] = {0.        ,0.11118526,0.11623951,0.12278249,0.14225717,0.16358263,
 0.16009257,0.18386037};            
		openmc::Tabular ang_dist_28(cos_angles_28, ang_probabilities_28, 8, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_28);

		// Angular distribution for energies 113000.0 < E <= 117000.0            
		double cos_angles_29[8] = {0.45399 ,0.469472,0.615661,0.694658,0.829038,0.939693,0.945519,1.      };            
		double ang_probabilities_29[8] = {0.        ,0.11121884,0.11662472,0.12351043,0.14306272,0.16501892,
 0.16146262,0.17910174};            
		openmc::Tabular ang_dist_29(cos_angles_29, ang_probabilities_29, 8, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_29);

		// Angular distribution for energies 117000.0 < E <= 121000.0            
		double cos_angles_30[8] = {0.469472,0.48481 ,0.62932 ,0.707107,0.838671,0.956305,0.961262,1.      };            
		double ang_probabilities_30[8] = {0.        ,0.11138797,0.11684492,0.1234265 ,0.14291794,0.16691384,
 0.163028  ,0.17548083};            
		openmc::Tabular ang_dist_30(cos_angles_30, ang_probabilities_30, 8, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_30);

		// Angular distribution for energies 121000.0 < E <= 125000.0            
		double cos_angles_31[8] = {0.5     ,0.515038,0.642788,0.71934 ,0.848048,0.97437 ,0.978148,1.      };            
		double ang_probabilities_31[8] = {0.        ,0.11184822,0.11691157,0.12317516,0.14252755,0.16894375,
 0.16480013,0.17179363};            
		openmc::Tabular ang_dist_31(cos_angles_31, ang_probabilities_31, 8, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_31);

		// Angular distribution for energies 125000.0 < E <= 129000.0            
		double cos_angles_32[8] = {0.515038,0.529919,0.656059,0.731354,0.87462 ,0.990268,0.992546,1.      };            
		double ang_probabilities_32[8] = {0.        ,0.11164528,0.11678025,0.12272054,0.1449164 ,0.17033112,
 0.16562281,0.1679836 };            
		openmc::Tabular ang_dist_32(cos_angles_32, ang_probabilities_32, 8, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_32);

		// Angular distribution for energies 129000.0 < E <= 133000.0            
		double cos_angles_33[6] = {0.544639,0.559193,0.681998,0.75471 ,0.891007,1.      };            
		double ang_probabilities_33[6] = {0.        ,0.1673173 ,0.17541494,0.18474505,0.21765856,0.25486415};            
		openmc::Tabular ang_dist_33(cos_angles_33, ang_probabilities_33, 6, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_33);

		// Angular distribution for energies 133000.0 < E <= 137000.0            
		double cos_angles_34[6] = {0.573576,0.587785,0.707107,0.777146,0.906308,1.      };            
		double ang_probabilities_34[6] = {0.        ,0.16771844,0.17622443,0.18594389,0.2183784 ,0.25173483};            
		openmc::Tabular ang_dist_34(cos_angles_34, ang_probabilities_34, 6, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_34);

		// Angular distribution for energies 137000.0 < E <= 141000.0            
		double cos_angles_35[7] = {0.587785,0.601815,0.71934 ,0.788011,0.891007,0.951057,1.      };            
		double ang_probabilities_35[7] = {0.        ,0.13774142,0.14480495,0.15237178,0.17308078,0.18804467,
 0.20395639};            
		openmc::Tabular ang_dist_35(cos_angles_35, ang_probabilities_35, 7, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_35);

		// Angular distribution for energies 141000.0 < E <= 145000.0            
		double cos_angles_36[6] = {0.615661,0.62932 ,0.743145,0.798636,0.882948,1.      };            
		double ang_probabilities_36[6] = {0.        ,0.17195692,0.18112475,0.18886894,0.20913391,0.24891548};            
		openmc::Tabular ang_dist_36(cos_angles_36, ang_probabilities_36, 6, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_36);

		// Angular distribution for energies 145000.0 < E <= 149000.0            
		double cos_angles_37[6] = {0.62932 ,0.642788,0.75471 ,0.819152,0.891007,1.      };            
		double ang_probabilities_37[6] = {0.        ,0.17265691,0.18194728,0.19116426,0.20883964,0.2453919 };            
		openmc::Tabular ang_dist_37(cos_angles_37, ang_probabilities_37, 6, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_37);

		// Angular distribution for energies 149000.0 < E <= 153000.0            
		double cos_angles_38[6] = {0.656059,0.669131,0.766044,0.829038,0.898794,1.      };            
		double ang_probabilities_38[6] = {0.        ,0.17438962,0.18288044,0.19162931,0.20860378,0.24249685};            
		openmc::Tabular ang_dist_38(cos_angles_38, ang_probabilities_38, 6, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_38);

		// Angular distribution for energies 153000.0 < E <= 157000.0            
		double cos_angles_39[5] = {0.669131,0.681998,0.838671,0.906308,1.      };            
		double ang_probabilities_39[5] = {0.        ,0.21479793,0.23557408,0.2554245 ,0.2942035 };            
		openmc::Tabular ang_dist_39(cos_angles_39, ang_probabilities_39, 5, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_39);

		// Angular distribution for energies 157000.0 < E <= 161000.0            
		double cos_angles_40[5] = {0.694658,0.707107,0.857167,0.920505,1.      };            
		double ang_probabilities_40[5] = {0.        ,0.21611674,0.23733664,0.25652765,0.29001897};            
		openmc::Tabular ang_dist_40(cos_angles_40, ang_probabilities_40, 5, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_40);

		// Angular distribution for energies 161000.0 < E <= 165000.0            
		double cos_angles_41[5] = {0.707107,0.71934 ,0.866025,0.927184,1.      };            
		double ang_probabilities_41[5] = {0.        ,0.21755719,0.23844462,0.2565496 ,0.28744859};            
		openmc::Tabular ang_dist_41(cos_angles_41, ang_probabilities_41, 5, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_41);

		// Angular distribution for energies 165000.0 < E <= 169000.0            
		double cos_angles_42[5] = {0.731354,0.743145,0.882948,0.93358 ,1.      };            
		double ang_probabilities_42[5] = {0.        ,0.21962785,0.240789  ,0.25580554,0.28377761};            
		openmc::Tabular ang_dist_42(cos_angles_42, ang_probabilities_42, 5, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_42);

		// Angular distribution for energies 169000.0 < E <= 173000.0            
		double cos_angles_43[5] = {0.75471 ,0.766044,0.898794,0.945519,1.      };            
		double ang_probabilities_43[5] = {0.        ,0.22133324,0.24254846,0.25665416,0.27946414};            
		openmc::Tabular ang_dist_43(cos_angles_43, ang_probabilities_43, 5, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_43);

		// Angular distribution for energies 173000.0 < E <= 177000.0            
		double cos_angles_44[5] = {0.766044,0.777146,0.906308,0.951057,1.      };            
		double ang_probabilities_44[5] = {0.        ,0.22289706,0.24373487,0.256704  ,0.27666407};            
		openmc::Tabular ang_dist_44(cos_angles_44, ang_probabilities_44, 5, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_44);

		// Angular distribution for energies 177000.0 < E <= 181000.0            
		double cos_angles_45[4] = {0.788011,0.798636,0.920505,1.      };            
		double ang_probabilities_45[4] = {0.        ,0.30255927,0.33037373,0.367067  };            
		openmc::Tabular ang_dist_45(cos_angles_45, ang_probabilities_45, 4, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_45);

		// Angular distribution for energies 181000.0 < E <= 185000.0            
		double cos_angles_46[4] = {0.809017,0.819152,0.927184,1.      };            
		double ang_probabilities_46[4] = {0.        ,0.30583541,0.33122798,0.36293661};            
		openmc::Tabular ang_dist_46(cos_angles_46, ang_probabilities_46, 4, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_46);

		// Angular distribution for energies 185000.0 < E <= 189000.0            
		double cos_angles_47[4] = {0.819152,0.829038,0.93358 ,1.      };            
		double ang_probabilities_47[4] = {0.        ,0.30764777,0.33262454,0.35972768};            
		openmc::Tabular ang_dist_47(cos_angles_47, ang_probabilities_47, 4, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_47);

		// Angular distribution for energies 189000.0 < E <= 193000.0            
		double cos_angles_48[4] = {0.838671,0.848048,0.939693,1.      };            
		double ang_probabilities_48[4] = {0.        ,0.31059264,0.33325095,0.35615642};            
		openmc::Tabular ang_dist_48(cos_angles_48, ang_probabilities_48, 4, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_48);

		// Angular distribution for energies 193000.0 < E <= 197000.0            
		double cos_angles_49[3] = {0.857167,0.866025,1.      };            
		double ang_probabilities_49[3] = {0.        ,0.47023159,0.52976841};            
		openmc::Tabular ang_dist_49(cos_angles_49, ang_probabilities_49, 3, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_49);

		// Angular distribution for energies 197000.0 < E <= 201000.0            
		double cos_angles_50[3] = {0.87462 ,0.882948,1.      };            
		double ang_probabilities_50[3] = {0.        ,0.47409818,0.52590182};            
		openmc::Tabular ang_dist_50(cos_angles_50, ang_probabilities_50, 3, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_50);

		// Angular distribution for energies 201000.0 < E <= 205000.0            
		double cos_angles_51[3] = {0.891007,0.898794,1.      };            
		double ang_probabilities_51[3] = {0.       ,0.4774886,0.5225114};            
		openmc::Tabular ang_dist_51(cos_angles_51, ang_probabilities_51, 3, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_51);

		// Angular distribution for energies 205000.0 < E <= 209000.0            
		double cos_angles_52[3] = {0.906308,0.913545,1.      };            
		double ang_probabilities_52[3] = {0.       ,0.4805223,0.5194777};            
		openmc::Tabular ang_dist_52(cos_angles_52, ang_probabilities_52, 3, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_52);

		// Angular distribution for energies 209000.0 < E <= 213000.0            
		double cos_angles_53[3] = {0.920505,0.927184,1.      };            
		double ang_probabilities_53[3] = {0.        ,0.48332574,0.51667426};            
		openmc::Tabular ang_dist_53(cos_angles_53, ang_probabilities_53, 3, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_53);

		// Angular distribution for energies 213000.0 < E <= 217000.0            
		double cos_angles_54[3] = {0.939693,0.945519,1.      };            
		double ang_probabilities_54[3] = {0.        ,0.48722317,0.51277683};            
		openmc::Tabular ang_dist_54(cos_angles_54, ang_probabilities_54, 3, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_54);

		// Angular distribution for energies 217000.0 < E <= 221000.0            
		double cos_angles_55[3] = {0.951057,0.956305,1.      };            
		double ang_probabilities_55[3] = {0.        ,0.48967489,0.51032511};            
		openmc::Tabular ang_dist_55(cos_angles_55, ang_probabilities_55, 3, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_55);

		// Angular distribution for energies 221000.0 < E <= 225000.0            
		double cos_angles_56[3] = {0.970296,0.97437 ,1.      };            
		double ang_probabilities_56[3] = {0.        ,0.49382534,0.50617466};            
		openmc::Tabular ang_dist_56(cos_angles_56, ang_probabilities_56, 3, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_56);

		// Angular distribution for energies 225000.0 < E <= 229000.0            
		double cos_angles_57[3] = {0.984808,0.987688,1.      };            
		double ang_probabilities_57[3] = {0.        ,0.49701827,0.50298173};            
		openmc::Tabular ang_dist_57(cos_angles_57, ang_probabilities_57, 3, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_57);

		// Angular distribution for energies 229000.0 < E <= 231000.0            
		double cos_angles_58[3] = {0.997564,0.99863 ,1.      };            
		double ang_probabilities_58[3] = {0.        ,0.49966819,0.50033181};            
		openmc::Tabular ang_dist_58(cos_angles_58, ang_probabilities_58, 3, openmc::Interpolation::lin_lin);            
		ang_dists.push_back(ang_dist_58);

		// Choose angular distribution depending on sampled energy    
		for (int n = 0; n < 58; n++) {    
			if (energy < edges[n]) {     
				mu = ang_dists[n].sample(seed);    
				break;
			}
		}

		// Convert sampled mu to angle    
		theta = std::acos(mu);    
		// Sample phi in range [0,2pi];    
		phi = 2.0 * M_PI * openmc::prn(seed);    

		// Set directional vector    
		particle.u = {std::sin(theta)*std::cos(phi), std::sin(theta)*std::sin(phi), mu};

		// Sample particle starting position
		//openmc::PowerLaw r_dist(0, 5, 1);    
		openmc::Normal r_dist(0, 1.7);
		// Sample the position of iteraction in the x-y plane
		double x_pos = r_dist.sample(seed);
    		double y_pos = r_dist.sample(seed);
		//pos_r = r_dist.sample(seed);    
		//pos_ang = 2.0 * M_PI * openmc::prn(seed);    
		// Set position of particle    
		particle.r = {x_pos, y_pos - 42, 0.0};	
		//particle.r = {0., -42., 0.};
		// Return particle    
		return particle;    
	}    
};

// Function to create unique pointer to an instance of this class when generated via a plugin call using dlopen/dlsym    
extern "C" std::unique_ptr<Li_source> openmc_create_source(std::string parameters) {    
	return std::make_unique<Li_source>();    
}
